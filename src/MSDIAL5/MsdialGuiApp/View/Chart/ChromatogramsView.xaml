<UserControl x:Class="CompMs.App.Msdial.View.Chart.ChromatogramsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:CompMs.App.Msdial.View.Chart"
             xmlns:chart="clr-namespace:CompMs.Graphics.Chart;assembly=ChartDrawing"
             xmlns:graphio="clr-namespace:CompMs.Graphics.IO;assembly=ChartDrawing"
             xmlns:behavior="clr-namespace:CompMs.Graphics.Behavior;assembly=ChartDrawing"
             mc:Ignorable="d" 
             d:Background="White"
             d:DesignHeight="450" d:DesignWidth="1200">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/View/ChartStyles.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <ControlTemplate x:Key="InputErrorTemplate">
                <DockPanel>
                    <TextBlock DockPanel.Dock="Right" Text="!" Foreground="Red" FontSize="18" FontWeight="Bold" Margin="5,2"/>
                    <AdornedElementPlaceholder/>
                </DockPanel>
            </ControlTemplate>

            <Style x:Key="ToolTipErrorStyle" TargetType="{x:Type TextBox}">
                <Setter Property="Validation.ErrorTemplate" Value="{StaticResource InputErrorTemplate}"/>
                <Style.Triggers>
                    <Trigger Property="Validation.HasError" Value="True">
                        <Setter Property="ToolTip" Value="{Binding Path=(Validation.Errors)/ErrorContent, RelativeSource={RelativeSource Self}}" />
                        <Setter Property="BorderBrush" Value="Pink" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="ToolTipErrorStyleDataGrid" TargetType="{x:Type DataGrid}">
                <Setter Property="Validation.ErrorTemplate" Value="{StaticResource InputErrorTemplate}"/>
                <Style.Triggers>
                    <Trigger Property="Validation.HasError" Value="True">
                        <Setter Property="ToolTip" Value="{Binding Path=(Validation.Errors)/ErrorContent, RelativeSource={RelativeSource Self}}" />
                        <Setter Property="BorderBrush" Value="Pink" />
                    </Trigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="160" />
            <ColumnDefinition Width="320" />
        </Grid.ColumnDefinitions>
        <chart:MultiChart HorizontalAxis="{Binding HorizontalAxis}"
                          VerticalAxis="{Binding VerticalAxis}"
                          HorizontalTitle="{Binding HorizontalTitle}"
                          GraphTitle="{Binding GraphTitle}"
                          ItemsSource="{Binding DisplayChromatograms}"
                          Background="WhiteSmoke"
                          BorderBrush="Black">
            <chart:MultiChart.Style>
                <Style TargetType="{x:Type chart:MultiChart}" BasedOn="{StaticResource OverlapChart}">
                    <Setter Property="VerticalTitle">
                        <Setter.Value>
                            <MultiBinding StringFormat="{}{0}({1})">
                                <MultiBinding.Bindings>
                                    <Binding Path="VerticalTitle"/>
                                    <Binding Path="VerticalAxis.UnitLabel"/>
                                </MultiBinding.Bindings>
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding VerticalAxis.UnitLabel, TargetNullValue=''}" Value="">
                            <Setter Property="VerticalTitle" Value="{Binding VerticalTitle}"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </chart:MultiChart.Style>
            <chart:MultiChart.ItemTemplate>
                <DataTemplate>
                    <Grid>
                        <chart:LineChartControl ItemsSource="{Binding ChromatogramPeaks}"
                                               LinePen="{Binding LinePen}"
                                               HorizontalPropertyName="{Binding DataContext.HorizontalProperty, RelativeSource={RelativeSource AncestorType={x:Type chart:MultiChart}}}"
                                               VerticalPropertyName="{Binding DataContext.VerticalProperty, RelativeSource={RelativeSource AncestorType={x:Type chart:MultiChart}}}"/>
                    </Grid>
                </DataTemplate>
            </chart:MultiChart.ItemTemplate>
            <chart:MultiChart.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Save image as...">
                        <MenuItem Header="Save as emf"
                                  Command="{x:Static graphio:SaveImageAsCommand.EmfInstance}"
                                  CommandParameter="{Binding PlacementTarget, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                        <MenuItem Header="Save as png"
                                  Command="{x:Static graphio:SaveImageAsCommand.PngInstance}"
                                  CommandParameter="{Binding PlacementTarget, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                    </MenuItem>
                    <MenuItem Header="Copy image as...">
                        <MenuItem Header="Copy as emf"
                                  Command="{x:Static graphio:CopyImageAsCommand.EmfInstance}"
                                  CommandParameter="{Binding PlacementTarget, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                        <MenuItem Header="Copy as png"
                                  Command="{x:Static graphio:CopyImageAsCommand.BitmapInstance}"
                                  CommandParameter="{Binding PlacementTarget, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                    </MenuItem>
                    <Separator/>
                    <MenuItem Header="Copy as table" Command="{Binding CopyAsTableCommand, Mode=OneTime}"/>
                    <MenuItem Header="Save as table" Command="{Binding SaveAsTableCommand, Mode=OneTime}"/>
                </ContextMenu>
            </chart:MultiChart.ContextMenu>
        </chart:MultiChart>
        <ItemsControl 
            ItemsSource="{Binding DisplayChromatograms}"
            VerticalAlignment="Center"
            Grid.Column="1">
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <TextBlock Text="{Binding Name}" Margin="8,0" Foreground="{Binding LineBrush}" />
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>

        <GridSplitter VerticalAlignment="Stretch" HorizontalAlignment="Right"
                      Background="LightGray"
                      Width="3"
                      Grid.Column="1"/>

        <Grid Grid.Column="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" MaxHeight="80"/>
                <RowDefinition/>
                <RowDefinition Height="40"/>
            </Grid.RowDefinitions>

            <StackPanel Orientation="Horizontal"
                        Margin="4">
                <StackPanel.Resources>
                    <Style TargetType="CheckBox">
                        <Setter Property="Margin" Value="8,0"/>
                    </Style>
                </StackPanel.Resources>
                <CheckBox Content="TIC"/>
                <CheckBox Content="BPC"/>
                <CheckBox Content="Highest m/z EIC"/>
            </StackPanel>

            <DataGrid ClipboardCopyMode="IncludeHeader" x:Name="Datagrid_EicDiplayProperties" Style="{StaticResource ResourceKey=ToolTipErrorStyleDataGrid}" 
                      ItemsSource="{Binding Path=DiplayEicSettingValues, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" 
                      behavior:DataGridPasteBehavior.Enable="True"
                      ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.HorizontalScrollBarVisibility="Auto" HorizontalAlignment="Stretch" 
                      VerticalAlignment="Stretch" CanUserAddRows="False" CanUserDeleteRows="False" CanUserReorderColumns="False" CanUserSortColumns="True" 
                      AutoGenerateColumns="False" SelectionMode="Extended" SelectionUnit="CellOrRowHeader"
                      AllowDrop="True"
                      Margin="4"
                      Grid.Row="1">
              
                <DataGrid.ColumnHeaderStyle>
                    <Style TargetType="DataGridColumnHeader">
                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                    </Style>
                </DataGrid.ColumnHeaderStyle>

                <DataGrid.Columns>

                    <DataGridTemplateColumn Width="1*" Header="Name" IsReadOnly="False" ClipboardContentBinding="{Binding Path=Title.Value}">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBox Name="TextBox_EicName" Style="{StaticResource ResourceKey=ToolTipErrorStyle}" Text="{Binding Path=Title.Value, UpdateSourceTrigger=PropertyChanged}" VerticalContentAlignment="Center"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>

                        <DataGridTemplateColumn.CellEditingTemplate>
                            <DataTemplate>
                                <Grid  FocusManager.FocusedElement="{Binding ElementName=TextBox_EicName}">
                                    <TextBox Name="TextBox_EicName" Text="{Binding Title.Value, UpdateSourceTrigger=PropertyChanged}" />
                                </Grid>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellEditingTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn SortMemberPath="Mass.Value" Width="1*" 
                                            Header="Exact mass" IsReadOnly="False" ClipboardContentBinding="{Binding Path=Mass.Value}">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBox Name="TextBox_ExactMass" Style="{StaticResource ResourceKey=ToolTipErrorStyle}" VerticalContentAlignment="Center"
                                         Text="{Binding Path=Mass.Value, UpdateSourceTrigger=PropertyChanged}"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>

                        <DataGridTemplateColumn.CellEditingTemplate>
                            <DataTemplate>
                                <Grid  FocusManager.FocusedElement="{Binding ElementName=TextBox_ExactMass}">
                                    <TextBox Name="TextBox_ExactMass" Text="{Binding Mass.Value, UpdateSourceTrigger=PropertyChanged}" />
                                </Grid>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellEditingTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn SortMemberPath="MassTolerance.Value" Width="*" 
                                            Header="Mass tolerance [Da]" IsReadOnly="False" ClipboardContentBinding="{Binding Path=MassTolerance.Value}">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBox Name="TextBox_MassTolerance" Style="{StaticResource ResourceKey=ToolTipErrorStyle}" VerticalContentAlignment="Center"
                                         Text="{Binding Path=MassTolerance.Value, UpdateSourceTrigger=PropertyChanged}"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>

                        <DataGridTemplateColumn.CellEditingTemplate>
                            <DataTemplate>
                                <Grid  FocusManager.FocusedElement="{Binding ElementName=TextBox_MassTolerance}">
                                    <TextBox Name="TextBox_MassTolerance" Text="{Binding MassTolerance.Value, UpdateSourceTrigger=PropertyChanged}" />
                                </Grid>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellEditingTemplate>
                    </DataGridTemplateColumn>

                </DataGrid.Columns>
            </DataGrid>

            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Grid.Row="2">
                <StackPanel.Resources>
                    <Style TargetType="Button">
                        <Setter Property="Height" Value="24"/>
                        <Setter Property="Width" Value="72"/>
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="Margin" Value="8,0"/>
                    </Style>
                </StackPanel.Resources>
                <Button Content="Apply" Command="{Binding ApplyCommand, Mode=OneTime}"/>
                <Button Content="Clear" Command="{Binding ClearCommand, Mode=OneTime}"/>
            </StackPanel>
        </Grid>
    </Grid>
</UserControl>

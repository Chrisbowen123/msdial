<Ribbon x:Class="CompMs.App.Msdial.View.Dims.DimsRibbon"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
        mc:Ignorable="d" 
        xmlns:vm="clr-namespace:CompMs.App.Msdial.ViewModel.Dims"
        xmlns:vmcore="clr-namespace:CompMs.App.Msdial.ViewModel.Core"
        xmlns:vmchart="clr-namespace:CompMs.App.Msdial.ViewModel.Chart"
        xmlns:chartSetting="clr-namespace:CompMs.App.Msdial.View.ChartSetting"
        xmlns:ribbon="clr-namespace:CompMs.App.Msdial.View.RibbonControl"
        xmlns:common="clr-namespace:CompMs.CommonMVVM;assembly=CommonMVVM"
        Background="{StaticResource MainThemeColor}"
        d:DataContext="{d:DesignInstance Type={x:Type vm:DimsMethodViewModel}}"
        d:DesignHeight="450" d:DesignWidth="800">
    <Ribbon.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/Msdial;component/View/MainWindowStyle.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <Style TargetType="RibbonContextualTabGroup">
                <Setter Property="Foreground" Value="Black"/>
            </Style>
            <Style TargetType="RibbonGroup">
                <Setter Property="Foreground" Value="Black"/>
            </Style>
        </ResourceDictionary>
    </Ribbon.Resources>
    <Ribbon.TabHeaderStyle>
        <Style TargetType="RibbonTabHeader">
            <Style.Triggers>
                <Trigger Property="IsRibbonTabSelected" Value="True">
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Ribbon.TabHeaderStyle>
    <Ribbon.QuickAccessToolBar>
        <ribbon:MsdialQuickAccessToolBar DataContext="{Binding Path=(Window.DataContext), RelativeSource={RelativeSource AncestorType=Window}}"/>
    </Ribbon.QuickAccessToolBar>
    <Ribbon.HelpPaneContent>
        <RibbonButton SmallImageSource="{StaticResource Version_is}"
                      Command="{Binding Path=(Window.DataContext).(vmcore:MainWindowVM.ShowAboutCommand), RelativeSource={RelativeSource AncestorType=Window}}"/>
    </Ribbon.HelpPaneContent>
    <Ribbon.ApplicationMenu>
        <ribbon:MsdialApplicationMenu DataContext="{Binding Path=(Window.DataContext), RelativeSource={RelativeSource AncestorType=Window}}"/>
    </Ribbon.ApplicationMenu>
    <Ribbon.ContextualTabGroups>
        <RibbonContextualTabGroup Header="Graph tools" Visibility="Visible" Background="{StaticResource MainThemeColor}"/>
    </Ribbon.ContextualTabGroups>

    <ribbon:MsdialProcessingTab DataContext="{Binding Path=(Window.DataContext), RelativeSource={RelativeSource AncestorType=Window}}"/>
    <ribbon:MsdialDataVisualizationTab/>
    <ribbon:MsdialSearchTab/>
    <ribbon:MsdialViewTab/>
    <ribbon:MsdialOptionTab DataContext="{Binding Path=(Window.DataContext).(vmcore:MainWindowVM.DatasetViewModel).Value, RelativeSource={RelativeSource AncestorType=Window}}"/>
    <ribbon:MsdialExportTab/>
    <ribbon:MsdialHelpTab DataContext="{Binding Path=(Window.DataContext), RelativeSource={RelativeSource AncestorType=Window}}"/>
    <RibbonTab Header="Filter"
               ContextualTabGroupHeader="Graph tools">
        <RibbonGroup Header="Display filter" DataContext="{Binding PeakFilterViewModel}">
            <RibbonCheckBox Label="Ref. matched" IsChecked="{Binding RefMatched}"/>
            <RibbonCheckBox Label="Suggested" IsChecked="{Binding Suggested}"/>
            <RibbonCheckBox Label="Unknown" IsChecked="{Binding Unknown}"/>
            <RibbonCheckBox Label="MS2 acquired" IsChecked="{Binding Ms2Acquired}"/>
            <RibbonCheckBox Label="Molecular ion" IsChecked="{Binding MolecularIon}" IsEnabled="False"/>
            <RibbonCheckBox Label="Blank filter" IsChecked="{Binding Blank}" IsEnabled="False"/>
            <RibbonCheckBox Label="Unique ions" IsChecked="{Binding UniqueIons}" IsEnabled="False"/>
            <RibbonCheckBox Label="Manually modified" IsChecked="{Binding ManuallyModified}"/>
        </RibbonGroup>
        <RibbonGroup Header="Focus">
            <RibbonTextBox Label="Focused ID" Text="{Binding AnalysisViewModel.Value.FocusID}"
                           IsEnabled="False">
                <RibbonTextBox.InputBindings>
                    <KeyBinding Gesture="Enter"
                                Command="{Binding AnalysisViewModel.Value.FocusByIDCommand}"/>
                </RibbonTextBox.InputBindings>
            </RibbonTextBox>
            <RibbonTextBox Label="Focused m/z" Text="{Binding AnalysisViewModel.Value.FocusMz}"
                           IsEnabled="False">
                <RibbonTextBox.InputBindings>
                    <KeyBinding Gesture="Enter"
                                Command="{Binding AnalysisViewModel.Value.FocusByMzCommand}"/>
                </RibbonTextBox.InputBindings>
            </RibbonTextBox>
        </RibbonGroup>
    </RibbonTab>
    <RibbonTab Header="Display"
               ContextualTabGroupHeader="Graph tools">
        <RibbonGroup Header="Spots"
                     d:Visibility="Visible"
                     Visibility="{Binding AlignmentViewModel.Value.PlotViewModel.IsFocused.Value, Converter={StaticResource BooleanToVisibility}}">
            <RibbonComboBox Label="Alignment"
                            SelectionBoxWidth="80"
                            VerticalAlignment="Center">
                <RibbonGallery SelectedValue="{Binding AlignmentViewModel.Value.PlotViewModel.SelectedBrush.Value}">
                    <RibbonGalleryCategory ItemsSource="{Binding AlignmentViewModel.Value.PlotViewModel.Brushes}"
                                           DisplayMemberPath="Label"/>
                </RibbonGallery>
            </RibbonComboBox>
        </RibbonGroup>
    </RibbonTab>
    <chartSetting:ExpRefViewSettingRibbonTab ContextualTabGroupHeader="Graph tools"
                                             DataContext="{Binding AnalysisViewModel.Value.RawDecSpectrumsViewModel}"
                                             d:DataContext="{d:DesignInstance Type={x:Type vmchart:RawDecSpectrumsViewModel}}"
                                             Visibility="{Binding IsFocused.Value, Converter={StaticResource BooleanToVisibility}, FallbackValue=Collapsed}"
                                             Style="{StaticResource FocusWhenVisible}"/>
    <chartSetting:RepRefViewSettingRibbonTab ContextualTabGroupHeader="Graph tools"
                                             DataContext="{Binding AlignmentViewModel.Value.Ms2SpectrumViewModel}"
                                             d:DataContext="{d:DesignInstance Type={x:Type vmchart:MsSpectrumViewModel}}"
                                             Visibility="{Binding IsFocused.Value, Converter={StaticResource BooleanToVisibility}, FallbackValue=Collapsed}"
                                             Style="{StaticResource FocusWhenVisible}"/>
    <chartSetting:Ms2ChromatogramSettingRibbonTab ContextualTabGroupHeader="Graph tools"
                                                  DataContext="{Binding AnalysisViewModel.Value.Ms2ChromatogramsViewModel}"
                                                  d:DataContext="{d:DesignInstance Type={x:Type vmchart:Ms2ChromatogramsViewModel}}"
                                                  Visibility="{Binding IsFocused.Value, Converter={StaticResource BooleanToVisibility}, FallbackValue=Collapsed}"
                                                  Style="{StaticResource FocusWhenVisible}"/>
    <chartSetting:BarChartOfAlignedSpotSettingRibbonTab ContextualTabGroupHeader="Graph tools"
                                                        DataContext="{Binding AlignmentViewModel.Value.BarChartViewModel}"
                                                        d:DataContext="{d:DesignInstance Type={x:Type vmchart:BarChartViewModel}}"
                                                        Visibility="{Binding IsFocused.Value, Converter={StaticResource BooleanToVisibility}, FallbackValue=Collapsed}"
                                                        Style="{StaticResource FocusWhenVisible}"/>
</Ribbon>

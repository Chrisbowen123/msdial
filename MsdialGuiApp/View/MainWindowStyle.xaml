<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:CompMs.App.Msdial.View"
                    xmlns:converter="clr-namespace:CompMs.CommonMVVM.Converter;assembly=CommonMVVM"
                    xmlns:ui="clr-namespace:CompMs.Graphics.UI;assembly=ChartDrawing"
                    xmlns:do="clr-namespace:CompMs.MsdialCore.DataObj;assembly=MsdialCore"
                    xmlns:if="clr-namespace:CompMs.Common.Interfaces;assembly=Common">
    <!--
    <mvvm:PercentSliderToLabelConverter x:Key="sliderToLabelConverter" />
    -->
    <converter:DoubleToStringConverter x:Key="doubleToStringConverter" />
    <BooleanToVisibilityConverter x:Key="boolean2visibility"/>

    <ControlTemplate x:Key="InputErrorTemplate">
        <DockPanel>
            <TextBlock DockPanel.Dock="Right" Text="!" Foreground="Red" FontSize="18" FontWeight="Bold" Margin="5,2"/>
            <AdornedElementPlaceholder/>
        </DockPanel>
    </ControlTemplate>

    <Style x:Key="ToolTipErrorStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Validation.ErrorTemplate" Value="{StaticResource InputErrorTemplate}"/>
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="ToolTip" Value="{Binding Path=(Validation.Errors)[0].ErrorContent, RelativeSource={RelativeSource Self}}" />
                <Setter Property="BorderBrush" Value="Pink" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="BasicErrorTemplate">
        <StackPanel>
            <Border BorderBrush="Red" BorderThickness="0,0,0,1">
                <AdornedElementPlaceholder x:Name="adornedElem"/>
            </Border>
            <TextBlock Text="{Binding AdornedElement.(Validation.Errors)/ErrorContent, ElementName=adornedElem}" Foreground="Red"/>
        </StackPanel>
    </ControlTemplate>

    <Style TargetType="GridSplitter">
        <Setter Property="Background" Value="Gray" />
    </Style>

    <Style TargetType="Border" x:Key="WindowBorder">
        <Setter Property="BorderBrush" Value="Gray" />
        <Setter Property="BorderThickness" Value="2" />
    </Style>

    <Style TargetType="Menu">
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush>
                    <SolidColorBrush.Color>
                        <Color A="255" R="130" G="170" B="200"/>
                    </SolidColorBrush.Color>
                </SolidColorBrush>
            </Setter.Value>
        </Setter>

        <Setter Property="Foreground" Value="Black" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="Gray" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
    </Style>

    <Style TargetType="ContextMenu">
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="Gray" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
    </Style>

    <Style x:Key="ReadOnlyTextBox" TargetType="TextBox">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="IsReadOnly" Value="True" />
    </Style>

    <!-- ui:LabeledContent -->
    <Style TargetType="ui:LabeledContent">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ui:LabeledContent">
                    <Grid HorizontalAlignment="Stretch">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <Label Content="{TemplateBinding PrependLabel}"
                               VerticalAlignment="Stretch" VerticalContentAlignment="Center"
                               Margin="0,0,8,0"
                               Grid.Column="0"/>
                        <ContentPresenter VerticalAlignment="Stretch"
                                          Grid.Column="1"/>
                        <Label Content="{TemplateBinding AppendLabel}"
                               VerticalAlignment="Stretch" VerticalContentAlignment="Center"
                               Margin="8,0,0,0"
                               Grid.Column="2"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="AlignedContent" TargetType="ui:LabeledContent">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ui:LabeledContent">
                    <Grid HorizontalAlignment="Stretch">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="80"/>
                        </Grid.ColumnDefinitions>

                        <Label Content="{TemplateBinding PrependLabel}"
                               VerticalAlignment="Center" VerticalContentAlignment="Center"
                               Margin="0,0,10,0"
                               Grid.Column="0"/>
                        <ContentPresenter VerticalAlignment="Center"
                                          Grid.Column="1"/>
                        <Label Content="{TemplateBinding AppendLabel}"
                               VerticalAlignment="Center" VerticalContentAlignment="Center"
                               Grid.Column="2"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DetailContent" TargetType="ui:LabeledContent">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ui:LabeledContent">
                    <Grid HorizontalAlignment="Stretch">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="120"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>

                        <Label Content="{TemplateBinding PrependLabel}"
                               VerticalAlignment="Center" VerticalContentAlignment="Center"
                               Margin="0,0,10,0"
                               Grid.Column="0"/>
                        <ContentPresenter VerticalAlignment="Center"
                                          Grid.Column="1"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CopyableDetailContent" TargetType="ui:LabeledContent"
           BasedOn="{StaticResource DetailContent}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBox Text="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}"
                             Style="{StaticResource ReadOnlyTextBox}"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ChromXCollapseContent" TargetType="ui:LabeledContent"
           BasedOn="{StaticResource DetailContent}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBox Text="{Binding Path=Content, StringFormat=N4, RelativeSource={RelativeSource TemplatedParent}}"
                             Style="{StaticResource ReadOnlyTextBox}"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Visibility" Value="Visible"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=Content, TargetNullValue=-1, RelativeSource={RelativeSource Self}}"
                         Value="-1">
                <Setter Property="Visibility" Value="Collapsed"/>
            </DataTrigger> 
        </Style.Triggers>
    </Style>

    <!--CompoundSearch properties template-->
    <DataTemplate x:Key="FileInfoTemplate">
        <StackPanel>
            <StackPanel.Resources>
                <Style TargetType="ui:LabeledContent" BasedOn="{StaticResource CopyableDetailContent}"/>
            </StackPanel.Resources>
            <TextBlock Text="File information" FontStyle="Italic"
                       HorizontalAlignment="Left"/>
            <Separator/>
            <ui:LabeledContent PrependLabel="File ID:"
                               Content="{Binding Path=(do:IFileBean.FileID), Mode=OneWay}"/>
            <ui:LabeledContent PrependLabel="File name:"
                               Content="{Binding Path=(do:IFileBean.FileName), Mode=OneWay}"/>
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="PeakInfoTemplate">
        <StackPanel>
            <StackPanel.Resources>
                <Style TargetType="ui:LabeledContent" BasedOn="{StaticResource DetailContent}"/>
            </StackPanel.Resources>
            <TextBlock Text="Peak information" FontStyle="Italic"
                       HorizontalAlignment="Left"/>
            <Separator/>
            <ui:LabeledContent PrependLabel="Molecular species:"
                               Content="{Binding Path=(if:IIonProperty.AdductType).AdductIonName, Mode=OneWay}"
                               Style="{StaticResource CopyableDetailContent}"/>
            <ui:LabeledContent PrependLabel="Accurate mass:">
                <TextBox Text="{Binding Path=(if:IMSProperty.PrecursorMz), StringFormat=N5, Mode=OneWay}" Style="{StaticResource ReadOnlyTextBox}"/>
            </ui:LabeledContent>
            <ui:LabeledContent PrependLabel="Retention time:"
                               Content="{Binding Path=(if:IMSProperty.ChromXs).RT.Value, Mode=OneWay}"
                               Style="{StaticResource ChromXCollapseContent}"/>
            <ui:LabeledContent PrependLabel="Retention index:"
                               Content="{Binding Path=(if:IMSProperty.ChromXs).RI.Value, Mode=OneWay}"
                               Style="{StaticResource ChromXCollapseContent}"/>
            <ui:LabeledContent PrependLabel="Drift time:"
                               Content="{Binding Path=(if:IMSProperty.ChromXs).Drift.Value, Mode=OneWay}"
                               Style="{StaticResource ChromXCollapseContent}"/>
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="AnnotationInfoTemplate">
        <StackPanel>
            <StackPanel.Resources>
                <Style TargetType="ui:LabeledContent" BasedOn="{StaticResource DetailContent}"/>
            </StackPanel.Resources>
            <TextBlock Text="Annotation information" FontStyle="Italic"
                       HorizontalAlignment="Left"/>
            <Separator/>
            <ui:LabeledContent PrependLabel="Identified:">
                <TextBox>
                    <TextBox.Style>
                        <Style BasedOn="{StaticResource ReadOnlyTextBox}" TargetType="TextBox">
                            <Setter Property="Text" Value="{Binding Path=(if:IMoleculeProperty.Name), Mode=OneWay}"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=(if:IMoleculeProperty.Name), Mode=OneWay, TargetNullValue=''}" Value="">
                                    <Setter Property="Text" Value="Unknown"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                </TextBox>
            </ui:LabeledContent>
            <ui:LabeledContent PrependLabel="Ontology:"
                               Content="{Binding Path=(if:IMoleculeProperty.Ontology), Mode=OneWay}"
                               Style="{StaticResource CopyableDetailContent}"/>
            <ui:LabeledContent PrependLabel="Formula:"
                               Content="{Binding Path=(if:IMoleculeProperty.Formula).FormulaString, Mode=OneWay}"
                               Style="{StaticResource CopyableDetailContent}"/>
        </StackPanel>
    </DataTemplate>
</ResourceDictionary>
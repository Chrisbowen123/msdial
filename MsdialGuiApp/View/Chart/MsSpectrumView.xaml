<UserControl x:Class="CompMs.App.Msdial.View.Chart.MsSpectrumView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d" 
             xmlns:chart="clr-namespace:CompMs.Graphics.Chart;assembly=ChartDrawing"
             xmlns:components="clr-namespace:CompMs.Common.Components;assembly=Common"
             xmlns:core="clr-namespace:CompMs.Graphics.Core.Base;assembly=ChartDrawing"
             xmlns:io="clr-namespace:CompMs.Graphics.IO;assembly=ChartDrawing"
             xmlns:vm="clr-namespace:CompMs.App.Msdial.ViewModel.Chart"
             d:DataContext="{d:DesignInstance Type={x:Type vm:MsSpectrumViewModel}}"
             d:Background="White"
             d:DesignHeight="600" d:DesignWidth="370" >
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/Msdial;component/View/MainWindowStyle.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/Msdial;component/View/ChartStyles.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <io:StyleFormatter x:Key="ReverseMsSpectrumFormatter" Style="{StaticResource ResourceKey=VerticalConcatChartFormal}"/>
            <io:SaveImageAsCommand x:Key="ReverseMsSpectrumSaveEmfCommand" Formatter="{StaticResource ReverseMsSpectrumFormatter}" Format="Emf"/>
            <io:CopyImageAsCommand x:Key="ReverseMsSpectrumCopyEmfCommand" Formatter="{StaticResource ReverseMsSpectrumFormatter}" Format="Emf"/>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <chart:MultiChart HorizontalAxis="{Binding HorizontalAxis.Value}"
                          GraphTitle="{Binding GraphTitle.Value}"
                          HorizontalTitle="{Binding HorizontalTitle.Value}"
                          VerticalTitle="{Binding VerticalTitle.Value}"
                          Style="{StaticResource VerticalConcatChart}">
            <chart:MultiChart.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Show all spectrum peak"
                              Command="{Binding PlacementTarget.DataContext.SwitchAllSpectrumCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                    <MenuItem Header="Show matched spectrum peak"
                              Command="{Binding PlacementTarget.DataContext.SwitchCompareSpectrumCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                    <MenuItem Header="Save spectrum as nist format"
                              Command="{Binding PlacementTarget.DataContext.SaveUpperSpectrumCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                    <MenuItem Header="Save image as...">
                        <MenuItem Header="Save formatted image"
                                  Command="{StaticResource ReverseMsSpectrumSaveEmfCommand}"
                                  CommandParameter="{Binding PlacementTarget, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                        <MenuItem Header="Save as emf"
                                  Command="{x:Static io:SaveImageAsCommand.EmfInstance}"
                                  CommandParameter="{Binding PlacementTarget, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                        <MenuItem Header="Save as png"
                                  Command="{x:Static io:SaveImageAsCommand.PngInstance}"
                                  CommandParameter="{Binding PlacementTarget, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                    </MenuItem>
                    <MenuItem Header="Save image using dialog"
                              Command="{x:Static io:SaveImageAsWithDialogCommand.Instance}"
                              CommandParameter="{Binding PlacementTarget, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                    <MenuItem Header="Copy image as...">
                        <MenuItem Header="Copy formatted image"
                                  Command="{StaticResource ReverseMsSpectrumCopyEmfCommand}"
                                  CommandParameter="{Binding PlacementTarget, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                        <MenuItem Header="Copy as emf"
                                  Command="{x:Static io:CopyImageAsCommand.EmfInstance}"
                                  CommandParameter="{Binding PlacementTarget, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                        <MenuItem Header="Copy as png"
                                  Command="{x:Static io:CopyImageAsCommand.BitmapInstance}"
                                  CommandParameter="{Binding PlacementTarget, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                    </MenuItem>
                    <MenuItem Header="Copy image using dialog"
                              Command="{x:Static io:CopyImageAsWithDialogCommand.Instance}"
                              CommandParameter="{Binding PlacementTarget, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                </ContextMenu>
            </chart:MultiChart.ContextMenu>
            <ItemsControl ItemsSource="{Binding UpperSpectraViewModel}"
                          core:ChartBaseControl.VerticalAxis="{Binding UpperVerticalAxis.Value}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Grid/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate DataType="{x:Type vm:SingleSpectrumViewModel}">
                        <Grid Visibility="{Binding IsVisible.Value, Converter={StaticResource BooleanToVisibility}}">
                            <StackPanel VerticalAlignment="Center">
                                <StackPanel.Style>
                                    <Style TargetType="StackPanel">
                                        <Setter Property="Visibility" Value="Visible"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding DataContext.SpectrumLoaded.Value, Mode=OneWay, RelativeSource={RelativeSource AncestorType=ItemsControl}}" Value="True">
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </StackPanel.Style>
                                <TextBlock Text="Loading ..." HorizontalAlignment="Center" FontSize="16" Margin="16"/>
                                <ProgressBar IsIndeterminate="True" HorizontalAlignment="Center" Width="160" Height="16"/>
                            </StackPanel>
                            <chart:LineSpectrumControlSlim x:Name="MS2Line"
                                                           ItemsSource="{Binding Spectrum.Value}"
                                                           DataType="{x:Type components:SpectrumPeak}"
                                                           HorizontalProperty="{Binding HorizontalProperty}"
                                                           VerticalProperty="{Binding VerticalProperty}"
                                                           LineBrush="{Binding Brush.Value}"
                                                           LineThickness="{Binding LineThickness.Value}"
                                                           HueProperty="SpectrumComment">
                                <chart:LineSpectrumControlSlim.ToolTip>
                                    <ToolTip DataContext="{Binding PlacementTarget, RelativeSource={RelativeSource Self}}">
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Text="m/z: "/>
                                            <TextBlock Text="{Binding FocusedItem.Mass}"/>
                                            <TextBlock Text=" Intensity: "/>
                                            <TextBlock Text="{Binding FocusedItem.Intensity}"/>
                                        </StackPanel>
                                    </ToolTip>
                                </chart:LineSpectrumControlSlim.ToolTip>
                            </chart:LineSpectrumControlSlim>
                            <chart:Annotator ItemsSource="{Binding Spectrum.Value}"
                                             HorizontalPropertyName="{Binding HorizontalProperty}"
                                             VerticalPropertyName="{Binding VerticalProperty}"
                                             LabelPropertyName="{Binding LabelProperty.Value, RelativeSource={RelativeSource AncestorType=ItemsControl}}"
                                             OrderingPropertyName="{Binding OrderingProperty.Value, RelativeSource={RelativeSource AncestorType=ItemsControl}}"
                                             Brush="Black"
                                             Overlap="Horizontal, Direct"
                                             ClipToBounds="True"/>
                        </Grid>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
            <!--
            <Grid core:ChartBaseControl.VerticalAxis="{Binding UpperVerticalAxis.Value}">
                <StackPanel VerticalAlignment="Center">
                    <StackPanel.Style>
                        <Style TargetType="StackPanel">
                            <Setter Property="Visibility" Value="Visible"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding SpectrumLoaded.Value, Mode=OneWay}" Value="True">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>
                    <TextBlock Text="Loading ..." HorizontalAlignment="Center" FontSize="16" Margin="16"/>
                    <ProgressBar IsIndeterminate="True" HorizontalAlignment="Center" Width="160" Height="16"/>
                </StackPanel>
                <chart:LineSpectrumControlSlim x:Name="MS2Line"
                                               ItemsSource="{Binding UpperSpectrum.Value}"
                                               DataType="{x:Type components:SpectrumPeak}"
                                               HorizontalProperty="{Binding HorizontalProperty.Value}"
                                               VerticalProperty="{Binding VerticalProperty}"
                                               LineBrush="{Binding UpperSpectrumBrushSource.Value}"
                                               HueProperty="SpectrumComment">
                    <chart:LineSpectrumControlSlim.ToolTip>
                        <ToolTip DataContext="{Binding PlacementTarget, RelativeSource={RelativeSource Self}}">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="m/z: "/>
                                <TextBlock Text="{Binding FocusedItem.Mass}"/>
                                <TextBlock Text=" Intensity: "/>
                                <TextBlock Text="{Binding FocusedItem.Intensity}"/>
                            </StackPanel>
                        </ToolTip>
                    </chart:LineSpectrumControlSlim.ToolTip>
                </chart:LineSpectrumControlSlim>
                <chart:Annotator ItemsSource="{Binding UpperSpectrum.Value}"
                                 HorizontalPropertyName="{Binding HorizontalProperty.Value}"
                                 VerticalPropertyName="{Binding VerticalProperty.Value}"
                                 LabelPropertyName="{Binding LabelProperty.Value}"
                                 OrderingPropertyName="{Binding OrderingProperty.Value}"
                                 Brush="Black"
                                 Overlap="Horizontal, Direct"
                                 ClipToBounds="True"/>
            </Grid>
            -->

            <Grid core:ChartBaseControl.FlippedY="False" core:ChartBaseControl.VerticalAxis="{Binding LowerVerticalAxis.Value}">
                <TextBlock Text="No information" FontSize="24"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center">
                    <TextBlock.Style>
                        <Style TargetType="TextBlock">
                            <Setter Property="Visibility" Value="Visible"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ReferenceHasSpectrumInfomation.Value, Mode=OneWay}" Value="True">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
                <chart:LineSpectrumControlSlim x:Name="MS2Ref"
                                               ItemsSource="{Binding LowerSpectrum.Value}"
                                               DataType="{x:Type components:SpectrumPeak}"
                                               HorizontalProperty="{Binding HorizontalProperty.Value}"
                                               VerticalProperty="{Binding VerticalProperty.Value}"
                                               LineBrush="{Binding LowerSpectrumBrushSource.Value}"
                                               HueProperty="SpectrumComment">
                    <chart:LineSpectrumControlSlim.ToolTip>
                        <ToolTip DataContext="{Binding PlacementTarget, RelativeSource={RelativeSource Self}}">
                            <StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="{Binding FocusedItem.Mass, StringFormat=m/z: {0}}"/>
                                    <TextBlock Text="{Binding FocusedItem.Intensity, StringFormat=Intensity: {0}}" Margin="4,0"/>
                                </StackPanel>
                                <TextBlock Text="{Binding FocusedItem.SpectrumComment, StringFormat=Spectrum: {0}}"/>
                                <TextBlock Text="{Binding FocusedItem.Comment, StringFormat=Comment: {0}}"/>
                            </StackPanel>
                        </ToolTip>
                    </chart:LineSpectrumControlSlim.ToolTip>
                </chart:LineSpectrumControlSlim>
                <chart:Annotator ItemsSource="{Binding LowerSpectrum.Value}"
                                 HorizontalPropertyName="{Binding HorizontalProperty.Value}"
                                 VerticalPropertyName="{Binding VerticalProperty.Value}"
                                 LabelPropertyName="{Binding LabelProperty.Value}"
                                 OrderingPropertyName="{Binding OrderingProperty.Value}"
                                 ContentAlignment="BottomCenter"
                                 Brush="Black"
                                 Overlap="Horizontal, Direct"
                                 ClipToBounds="True"/>
            </Grid>
        </chart:MultiChart>
        <TextBlock Text="Measurement" FontStyle="Italic" FontFamily="Calibri"
                   VerticalAlignment="Top" HorizontalAlignment="Right" />
        <TextBlock Text="Reference" FontStyle="Italic" FontFamily="Calibri"
                   VerticalAlignment="Bottom" HorizontalAlignment="Right"
                   Margin="0,0,5,5"/>
    </Grid>
</UserControl>

<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:PresentationOptions="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
                    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
                    xmlns:local="clr-namespace:CompMs.App.SpectrumViewer.View"
                    xmlns:vm="clr-namespace:CompMs.App.SpectrumViewer.ViewModel"
                    xmlns:model="clr-namespace:CompMs.App.SpectrumViewer.Model"
                    xmlns:rp="clr-namespace:Reactive.Bindings.Interactivity;assembly=ReactiveProperty.WPF"
                    xmlns:chart="clr-namespace:CompMs.Graphics.Chart;assembly=ChartDrawing"
                    xmlns:behavior="clr-namespace:CompMs.Graphics.Behavior;assembly=ChartDrawing">
    <Style TargetType="{x:Type chart:MultiChart}" x:Key="OverlapChart">
        <Setter Property="Background" Value="WhiteSmoke"/>
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type chart:MultiChart}">
                    <Grid>
                        <Grid.Resources>
                            <Style TargetType="TextBlock" x:Key="GraphTitle">
                                <Setter Property="FontFamily" Value="Calibri"/>
                                <Setter Property="FontSize" Value="13"/>
                                <Setter Property="VerticalAlignment" Value="Center"/>
                                <Setter Property="HorizontalAlignment" Value="Left"/>
                            </Style>
                            <Style TargetType="TextBlock" x:Key="AxisTitle">
                                <Setter Property="FontFamily" Value="Calibri"/>
                                <Setter Property="FontStyle" Value="Italic"/>
                                <Setter Property="FontSize" Value="14"/>
                                <Setter Property="VerticalAlignment" Value="Center"/>
                                <Setter Property="HorizontalAlignment" Value="Center"/>
                            </Style>
                        </Grid.Resources>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="25"/>
                            <RowDefinition />
                            <RowDefinition Height="30"/>
                            <RowDefinition Height="15"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="15"/>
                            <ColumnDefinition Width="40"/>
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>

                        <TextBlock Name="GraphTitle"
                                   Text="{Binding GraphTitle, RelativeSource={RelativeSource TemplatedParent}}"
                                   Style="{StaticResource GraphTitle}"
                                   IsHitTestVisible="False"
                                   Grid.Row="0" Grid.Column="2"/>

                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="1,0,0,1"
                                Grid.Row="1" Grid.Column="2">
                            <Border Background="{TemplateBinding Background}"
                                    behavior:ZoomByDragBehavior.IsEnabled="True"
                                    behavior:ZoomByWheelBehavior.IsEnabled="True"
                                    behavior:MoveByDragBehavior.IsEnabled="True"
                                    behavior:ResetRangeByDoubleClickBehavior.IsEnabled="True">
                                <Grid IsItemsHost="True"/>
                            </Border>
                        </Border>

                        <chart:HorizontalAxisControl x:Name="PART_HorizontalAxis"
                                                    VerticalAxis="{x:Null}"
                                                    Margin="1,0,0,0"
                                                    Grid.Row="2" Grid.RowSpan="2" Grid.Column="2"/>
                        <chart:VerticalAxisControl x:Name="PART_VerticalAxis"
                                                  HorizontalAxis="{x:Null}"
                                                  Margin="0,0,0,1"
                                                  Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2"/>

                        <TextBlock Name="HorizontalTitle"
                                   Text="{TemplateBinding HorizontalTitle}"
                                   Style="{StaticResource AxisTitle}"
                                   IsHitTestVisible="False"
                                   Grid.Row="3" Grid.Column="2"/>
                        <TextBlock Name="VerticalTitle"
                                   Text="{TemplateBinding VerticalTitle}"
                                   Style="{StaticResource AxisTitle}"
                                   IsHitTestVisible="False"
                                   Grid.Row="1" Grid.Column="0">
                            <TextBlock.LayoutTransform>
                                <RotateTransform Angle="-90" CenterX="0.5" CenterY="0.5"/>
                            </TextBlock.LayoutTransform>
                        </TextBlock>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate DataType="{x:Type vm:SpectrumViewModel}">
        <DataTemplate.Resources>
            <AlternationConverter x:Key="PenConverter">
                <Pen Brush="White" Thickness="2" PresentationOptions:Freeze="True"/>
                <Pen Brush="LightCoral" Thickness="2" PresentationOptions:Freeze="True"/>
                <Pen Brush="LightSkyBlue" Thickness="2" PresentationOptions:Freeze="True"/>
                <Pen Brush="LightGreen" Thickness="2" PresentationOptions:Freeze="True"/>
                <Pen Brush="LightGray" Thickness="2" PresentationOptions:Freeze="True"/>
                <Pen Brush="LightPink" Thickness="2" PresentationOptions:Freeze="True"/>
                <Pen Brush="LightBlue" Thickness="2" PresentationOptions:Freeze="True"/>
                <Pen Brush="LightYellow" Thickness="2" PresentationOptions:Freeze="True"/>
            </AlternationConverter>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibility"/>
        </DataTemplate.Resources>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <chart:MultiChart ItemsSource="{Binding DisplayScans}"
                              HorizontalTitle="m/z"
                              VerticalTitle="{Binding VerticalAxis.UnitLabel, StringFormat=Intensity ({0})}"
                              HorizontalAxis="{Binding HorizontalAxis}"
                              VerticalAxis="{Binding VerticalAxis}"
                              Background="#FF202020" BorderBrush="White"
                              Style="{StaticResource OverlapChart}"
                              AlternationCount="8"
                              Grid.Column="0">
                <chart:MultiChart.ItemTemplate>
                    <DataTemplate>
                        <Grid HorizontalAlignment="Stretch"
                              Visibility="{Binding Visible, Converter={StaticResource BooleanToVisibility}}">
                            <chart:LineSpectrumControl ItemsSource="{Binding Spectrum}"
                                                       HorizontalPropertyName="Mass"
                                                       VerticalPropertyName="Intensity"
                                                       LinePen="{Binding Path=(ItemsControl.AlternationIndex),
                                                                         RelativeSource={RelativeSource AncestorType=ContentControl},
                                                                         Converter={StaticResource PenConverter}}">
                                <chart:LineSpectrumControl.ToolTip>
                                    <ToolTip DataContext="{Binding PlacementTarget, RelativeSource={RelativeSource Self}}">
                                        <StackPanel>
                                            <TextBlock Text="{Binding FocusedItem.Comment, StringFormat=Comment: {0}}"/>
                                            <TextBlock Text="{Binding FocusedItem.Mass, StringFormat=m/z: {0}}"/>
                                            <TextBlock Text="{Binding FocusedItem.Intensity, StringFormat=Intensity: {0}}"/>
                                        </StackPanel>
                                    </ToolTip>
                                </chart:LineSpectrumControl.ToolTip>
                            </chart:LineSpectrumControl>
                            <chart:Annotator ItemsSource="{Binding Spectrum}"
                                             HorizontalPropertyName="Mass"
                                             VerticalPropertyName="Intensity"
                                             Overlap="Direct,Horizontal"
                                             OrderingPropertyName="Intensity"
                                             LabelPropertyName="Mass"
                                             Format="N3"
                                             TopN="5"
                                             Brush="White"/>
                        </Grid>
                    </DataTemplate>
                </chart:MultiChart.ItemTemplate>
            </chart:MultiChart>

            <ItemsControl ItemsSource="{Binding DisplayScans}"
                          VerticalAlignment="Center"
                          AlternationCount="8"
                          Margin="8"
                          Grid.Column="1">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Left"
                                    Margin="0,4">
                            <ToggleButton IsChecked="{Binding Visible}">
                                <Image Width="24">
                                    <Image.Source>
                                        <DrawingImage>
                                            <DrawingImage.Drawing>
                                                <GeometryDrawing Geometry="M 0,0 H 8"
                                                                 Pen="{Binding Path=(ItemsControl.AlternationIndex),
                                                                               RelativeSource={RelativeSource TemplatedParent},
                                                                               Converter={StaticResource PenConverter}}"/>
                                            </DrawingImage.Drawing>
                                        </DrawingImage>
                                    </Image.Source>
                                </Image>
                            </ToggleButton>
                            <TextBlock Text="{Binding Name}" Margin="8,0" Foreground="White"/>
                        </StackPanel>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </Grid>
    </DataTemplate>

    <DataTemplate xmlns:ref="clr-namespace:CompMs.Common.Components;assembly=Common"
                  DataType="{x:Type ref:MoleculeMsReference}">
        <StackPanel>
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseLeftButtonDown">
                    <rp:EventToReactiveCommand Command="{Binding DataContext.ClickCommand, RelativeSource={RelativeSource AncestorType=ListBox}}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="{Binding Name, Mode=OneTime}"/>
                <TextBlock Text="Class:" Margin="4,0"/>
                <TextBlock Text="{Binding CompoundClass, Mode=OneTime}"/>
            </StackPanel>
            <TextBlock Text="{Binding PrecursorMz, StringFormat=Precursor m/z: {0:N4}}"/>
        </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:ScanCollectionViewModel}">
        <ListBox ItemsSource="{Binding Scans}"
                 SelectedItem="{Binding Scan.Value}"
                 Background="LightGray"/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:LipidReferenceCollectionViewModel}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <DockPanel Grid.Row="0">
                <Button Content="&#xE721;" FontFamily="Segoe MDL2 Assets"
                        Command="{Binding ParseLipidCommand}"
                        DockPanel.Dock="Right"/>
                <TextBox Text="{Binding LipidStr.Value}"/>
            </DockPanel>
            <TextBlock Text="{Binding Lipid.Value, StringFormat=Current lipid: {0}}"
                       Grid.Row="1"/>
            <ListBox ItemsSource="{Binding Scans, Mode=OneWay}"
                     SelectedItem="{Binding Scan.Value}"
                     Background="LightGray"
                     Grid.Row="2"/>
        </Grid>
    </DataTemplate>
</ResourceDictionary>